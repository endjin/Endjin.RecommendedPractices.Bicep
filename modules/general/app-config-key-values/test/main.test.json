{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.8.9.13224",
      "templateHash": "23218407338202429"
    }
  },
  "parameters": {
    "suffix": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "acsDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "name": {
            "value": "[format('acs{0}', parameters('suffix'))]"
          },
          "sku": {
            "value": "Standard"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "10695924962515863488"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the app configuration store"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location of the app configuration store"
              }
            },
            "enablePublicNetworkAccess": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "When false, the app configuration store will be inaccessible via its public IP address"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "SKU for the app configuration store"
              }
            },
            "saveConnectionStringsToKeyVault": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the primary connection strings (read/write and read-only) will be written to the specified key vault"
              }
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The name of the key vault used to store the connection strings"
              }
            },
            "keyVaultResourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group containing the key vault used to store the connection strings"
              }
            },
            "keyVaultSubscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "The ID of the subscription containing the key vault used to store the connection strings"
              }
            },
            "keyVaultConnectionStringSecretName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The key vault secret name used to store the read/write connection string"
              }
            },
            "keyVaultReadOnlyConnectionStringSecretName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The key vault secret name used to store the read-only connection string"
              }
            },
            "useExisting": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the details of an existing app configuration store will be returned; When false, the app configuration store is created/updated"
              }
            },
            "resourceTags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "The resource tags applied to resources"
              }
            }
          },
          "variables": {
            "publicNetworkAccess": "[if(parameters('enablePublicNetworkAccess'), 'Enabled', 'Disabled')]"
          },
          "resources": [
            {
              "condition": "[not(parameters('useExisting'))]",
              "type": "Microsoft.AppConfiguration/configurationStores",
              "apiVersion": "2020-06-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "properties": {
                "publicNetworkAccess": "[variables('publicNetworkAccess')]"
              },
              "tags": "[parameters('resourceTags')]"
            },
            {
              "condition": "[parameters('saveConnectionStringsToKeyVault')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('appConfigConnStrSecretDeploy{0}', parameters('name'))]",
              "subscriptionId": "[parameters('keyVaultSubscriptionId')]",
              "resourceGroup": "[parameters('keyVaultResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "secretName": {
                    "value": "[parameters('keyVaultConnectionStringSecretName')]"
                  },
                  "contentValue": {
                    "value": "[if(parameters('useExisting'), listKeys(resourceId('Microsoft.AppConfiguration/configurationStores', parameters('name')), '2020-06-01').value[0].connectionString, listKeys(resourceId('Microsoft.AppConfiguration/configurationStores', parameters('name')), '2020-06-01').value[0].connectionString)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.8.9.13224",
                      "templateHash": "12015994460177070841"
                    }
                  },
                  "parameters": {
                    "secretName": {
                      "type": "string",
                      "metadata": {
                        "description": "Enter the secret name."
                      }
                    },
                    "contentType": {
                      "type": "string",
                      "defaultValue": "text/plain",
                      "metadata": {
                        "description": "Type of the secret"
                      }
                    },
                    "contentValue": {
                      "type": "secureString",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Value of the secret"
                      }
                    },
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the vault"
                      }
                    },
                    "useExisting": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "When true, a pre-existing secret will be returned"
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('useExisting'))]",
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2021-06-01-preview",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "contentType": "[parameters('contentType')]",
                        "value": "[parameters('contentValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretUriWithVersion": {
                      "type": "string",
                      "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2021-06-01-preview').secretUriWithVersion, reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2021-06-01-preview').secretUriWithVersion)]",
                      "metadata": {
                        "description": "The key vault URI linking to the new/updated secret"
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.AppConfiguration/configurationStores', parameters('name'))]"
              ]
            },
            {
              "condition": "[parameters('saveConnectionStringsToKeyVault')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('appConfigRoConnStrSecretDeploy{0}', parameters('name'))]",
              "subscriptionId": "[parameters('keyVaultSubscriptionId')]",
              "resourceGroup": "[parameters('keyVaultResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "secretName": {
                    "value": "[parameters('keyVaultReadOnlyConnectionStringSecretName')]"
                  },
                  "contentValue": {
                    "value": "[if(parameters('useExisting'), listKeys(resourceId('Microsoft.AppConfiguration/configurationStores', parameters('name')), '2020-06-01').value[2].connectionString, listKeys(resourceId('Microsoft.AppConfiguration/configurationStores', parameters('name')), '2020-06-01').value[2].connectionString)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.8.9.13224",
                      "templateHash": "12015994460177070841"
                    }
                  },
                  "parameters": {
                    "secretName": {
                      "type": "string",
                      "metadata": {
                        "description": "Enter the secret name."
                      }
                    },
                    "contentType": {
                      "type": "string",
                      "defaultValue": "text/plain",
                      "metadata": {
                        "description": "Type of the secret"
                      }
                    },
                    "contentValue": {
                      "type": "secureString",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Value of the secret"
                      }
                    },
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the vault"
                      }
                    },
                    "useExisting": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "When true, a pre-existing secret will be returned"
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('useExisting'))]",
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2021-06-01-preview",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "contentType": "[parameters('contentType')]",
                        "value": "[parameters('contentValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretUriWithVersion": {
                      "type": "string",
                      "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2021-06-01-preview').secretUriWithVersion, reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2021-06-01-preview').secretUriWithVersion)]",
                      "metadata": {
                        "description": "The key vault URI linking to the new/updated secret"
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.AppConfiguration/configurationStores', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[if(parameters('useExisting'), resourceId('Microsoft.AppConfiguration/configurationStores', parameters('name')), resourceId('Microsoft.AppConfiguration/configurationStores', parameters('name')))]",
              "metadata": {
                "description": "The resource ID of the app configuration store"
              }
            },
            "name": {
              "type": "string",
              "value": "[if(parameters('useExisting'), parameters('name'), parameters('name'))]",
              "metadata": {
                "description": "The name of the app configuration store"
              }
            },
            "appConfigStoreResource": {
              "type": "object",
              "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.AppConfiguration/configurationStores', parameters('name')), '2020-06-01', 'full'), reference(resourceId('Microsoft.AppConfiguration/configurationStores', parameters('name')), '2020-06-01', 'full'))]",
              "metadata": {
                "description": "An object representing the app configuration store resource"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "acsKeyValuesDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appConfigStoreName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acsDeploy')).outputs.name.value]"
          },
          "entries": {
            "value": [
              {
                "name": "key1",
                "value": "a"
              },
              {
                "name": "key2",
                "value": "b"
              },
              {
                "name": "key3",
                "value": "c"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "2547626762473758328"
            }
          },
          "parameters": {
            "appConfigStoreName": {
              "type": "string",
              "metadata": {
                "description": "The app configuration instance where the keys will be stored"
              }
            },
            "entries": {
              "type": "array",
              "metadata": {
                "description": "Array of key/values to be written to the app configuration store, each with the structure {name: \"<key-name>\", value: \"<key-value>\"}"
              }
            },
            "label": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "When defined, all app configuration keys will have this labelled applied"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "test_app_config_entry",
                "count": "[length(parameters('entries'))]"
              },
              "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
              "apiVersion": "2021-03-01-preview",
              "name": "[format('{0}/{1}', parameters('appConfigStoreName'), if(empty(parameters('label')), parameters('entries')[copyIndex()].name, format('{0}${1}', parameters('entries')[copyIndex()].name, parameters('label'))))]",
              "properties": {
                "value": "[parameters('entries')[copyIndex()].value]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acsDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "acsKeyValuesLabelledDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appConfigStoreName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acsDeploy')).outputs.name.value]"
          },
          "label": {
            "value": "mylabel"
          },
          "entries": {
            "value": [
              {
                "name": "key4",
                "value": "d"
              },
              {
                "name": "key5",
                "value": "e"
              },
              {
                "name": "key6",
                "value": "f"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "2547626762473758328"
            }
          },
          "parameters": {
            "appConfigStoreName": {
              "type": "string",
              "metadata": {
                "description": "The app configuration instance where the keys will be stored"
              }
            },
            "entries": {
              "type": "array",
              "metadata": {
                "description": "Array of key/values to be written to the app configuration store, each with the structure {name: \"<key-name>\", value: \"<key-value>\"}"
              }
            },
            "label": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "When defined, all app configuration keys will have this labelled applied"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "test_app_config_entry",
                "count": "[length(parameters('entries'))]"
              },
              "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
              "apiVersion": "2021-03-01-preview",
              "name": "[format('{0}/{1}', parameters('appConfigStoreName'), if(empty(parameters('label')), parameters('entries')[copyIndex()].name, format('{0}${1}', parameters('entries')[copyIndex()].name, parameters('label'))))]",
              "properties": {
                "value": "[parameters('entries')[copyIndex()].value]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acsDeploy')]"
      ]
    }
  ]
}