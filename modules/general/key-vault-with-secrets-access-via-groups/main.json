{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.5.6.12127",
      "templateHash": "13691781896326940267"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the key vault"
      }
    },
    "secretsReadersGroupObjectId": {
      "type": "string",
      "metadata": {
        "description": "The AzureAD objectId for the group to be granted \"get\" access to secrets"
      }
    },
    "secretsReadersPermissions": {
      "type": "array",
      "defaultValue": [
        "get"
      ],
      "metadata": {
        "description": "The list of secret permissions granted to the \"reader\" group"
      }
    },
    "secretsContributorsGroupObjectId": {
      "type": "string",
      "metadata": {
        "description": "The AzureAD objectId for the group to be granted \"get\" & \"set\" access to secrets"
      }
    },
    "secretsContributorsPermissions": {
      "type": "array",
      "defaultValue": [
        "get",
        "set"
      ],
      "metadata": {
        "description": "The list of secret permissions granted to the \"contributors\" group"
      }
    },
    "tenantId": {
      "type": "string",
      "metadata": {
        "description": "The Azure tenantId of the key vault"
      }
    },
    "enabledForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When true, the key vault will be accessible by deployments"
      }
    },
    "enabledForDiskEncryption": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When true, the key vault will be accessible for disk encryption"
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When true, the key vault will be accessible by ARM deployments"
      }
    },
    "enableDiagnostics": {
      "type": "bool",
      "metadata": {
        "description": "When true, diagnostics settings will be enabled for the key vault"
      }
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The storage account name to be used for key vault diagnostic settings"
      }
    },
    "useExistingStorageAccount": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When true, an existing storage account be used for diagnotics settings; When false, the storage account is created/updated"
      }
    },
    "diagnosticsRetentionDays": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Sets the retention policy for diagnostics settings data, in days"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the key vault"
      }
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "The resource tags applied to resources"
      }
    }
  },
  "variables": {
    "readerAccessPolicy": "[if(not(empty(parameters('secretsReadersGroupObjectId'))), createObject('objectId', parameters('secretsReadersGroupObjectId'), 'tenantId', parameters('tenantId'), 'permissions', createObject('secrets', parameters('secretsReadersPermissions'))), createObject())]",
    "contributorAccessPolicy": "[if(not(empty(parameters('secretsContributorsGroupObjectId'))), createObject('objectId', parameters('secretsContributorsGroupObjectId'), 'tenantId', parameters('tenantId'), 'permissions', createObject('secrets', parameters('secretsContributorsPermissions'))), createObject())]",
    "accessPolicies": [
      "[variables('readerAccessPolicy')]",
      "[variables('contributorAccessPolicy')]"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('keyVault-{0}', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "enableDiagnostics": {
            "value": "[parameters('enableDiagnostics')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "useExistingStorageAccount": {
            "value": "[parameters('useExistingStorageAccount')]"
          },
          "diagnosticsRetentionDays": {
            "value": "[parameters('diagnosticsRetentionDays')]"
          },
          "accessPolicies": {
            "value": "[variables('accessPolicies')]"
          },
          "enabledForDeployment": {
            "value": "[parameters('enabledForDeployment')]"
          },
          "enabledForDiskEncryption": {
            "value": "[parameters('enabledForDiskEncryption')]"
          },
          "enabledForTemplateDeployment": {
            "value": "[parameters('enabledForTemplateDeployment')]"
          },
          "tenantId": {
            "value": "[parameters('tenantId')]"
          },
          "useExisting": {
            "value": false
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceTags": {
            "value": "[parameters('resourceTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.5.6.12127",
              "templateHash": "9028382947723589439"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the key vault"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "standard",
              "metadata": {
                "description": "SKU for the key vault"
              }
            },
            "accessPolicies": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "The access policies for the key vault"
              }
            },
            "tenantId": {
              "type": "string",
              "metadata": {
                "description": "The Azure tenantId of the key vault"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location of the key vault"
              }
            },
            "enabledForDeployment": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the key vault will be accessible by deployments"
              }
            },
            "enabledForDiskEncryption": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the key vault will be accessible for disk encryption"
              }
            },
            "enabledForTemplateDeployment": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the key vault will be accessible by ARM deployments"
              }
            },
            "enableDiagnostics": {
              "type": "bool",
              "metadata": {
                "description": "When true, diagnostics settings will be enabled for the key vault"
              }
            },
            "diagnosticsStorageAccountName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The storage account name to be used for key vault diagnostic settings"
              }
            },
            "useExistingStorageAccount": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, an existing storage account be used for diagnotics settings; When false, the storage account is created/updated"
              }
            },
            "diagnosticsRetentionDays": {
              "type": "int",
              "defaultValue": 30,
              "metadata": {
                "description": "Sets the retention policy for diagnostics settings data, in days"
              }
            },
            "useExisting": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the details of an existing key vault will be returned; When false, the key vault is created/udpated"
              }
            },
            "resourceTags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "The resource tags applied to resources"
              }
            }
          },
          "resources": [
            {
              "condition": "[not(parameters('useExisting'))]",
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-06-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "[parameters('sku')]"
                },
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": "[parameters('accessPolicies')]"
              },
              "tags": "[parameters('resourceTags')]"
            },
            {
              "condition": "[parameters('enableDiagnostics')]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('name'))]",
              "name": "service",
              "properties": {
                "storageAccountId": "[if(parameters('useExistingStorageAccount'), resourceId('Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName')), reference(resourceId('Microsoft.Resources/deployments', 'kvDiagnosticsDeploy'), '2020-10-01').outputs.id.value)]",
                "logs": [
                  {
                    "category": "AuditEvent",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": "[parameters('diagnosticsRetentionDays')]",
                      "enabled": true
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'kvDiagnosticsDeploy')]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
              ]
            },
            {
              "condition": "[and(and(not(parameters('useExisting')), parameters('enableDiagnostics')), not(parameters('useExistingStorageAccount')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "kvDiagnosticsDeploy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.5.6.12127",
                      "templateHash": "9631678655871697021"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the storage account"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The location of the storage account"
                      }
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "Standard_LRS",
                      "metadata": {
                        "description": "The SKU of the storage account"
                      }
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "StorageV2",
                      "metadata": {
                        "description": "The kind of the storage account"
                      }
                    },
                    "tlsVersion": {
                      "type": "string",
                      "defaultValue": "TLS1_2",
                      "metadata": {
                        "description": "The minimum TLS version required by the storage account"
                      }
                    },
                    "httpsOnly": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "When true, disables access to the storage account via unencrypted HTTP connections"
                      }
                    },
                    "accessTier": {
                      "type": "string",
                      "defaultValue": "Hot",
                      "metadata": {
                        "description": "The access tier of the storage account"
                      }
                    },
                    "saveAccessKeyToKeyVault": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "When true, the primary storage access key will be written to the specified key vault"
                      }
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the key vault used to store the access key"
                      }
                    },
                    "keyVaultResourceGroupName": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group containing the key vault used to store the access key"
                      }
                    },
                    "keyVaultSubscriptionName": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]",
                      "metadata": {
                        "description": "The subscription containing the key vault used to store the access key"
                      }
                    },
                    "keyVaultSecretName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The key vault secret name used to store the access key"
                      }
                    },
                    "useExisting": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "When true, the details of an existing storage account will be returned; When false, the storage account is created/udpated"
                      }
                    },
                    "resource_tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "The resource tags applied to resources"
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('useExisting'))]",
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "[parameters('sku')]"
                      },
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "minimumTlsVersion": "[parameters('tlsVersion')]",
                        "supportsHttpsTrafficOnly": "[parameters('httpsOnly')]",
                        "accessTier": "[parameters('accessTier')]"
                      },
                      "tags": "[parameters('resource_tags')]"
                    },
                    {
                      "condition": "[parameters('saveAccessKeyToKeyVault')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "storageSecretDeploy",
                      "subscriptionId": "[parameters('keyVaultSubscriptionName')]",
                      "resourceGroup": "[parameters('keyVaultResourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "secretName": {
                            "value": "[parameters('keyVaultSecretName')]"
                          },
                          "contentValue": {
                            "value": "[if(parameters('useExisting'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2021-06-01').keys[0].value, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2021-06-01').keys[0].value)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.5.6.12127",
                              "templateHash": "4053446927271603000"
                            }
                          },
                          "parameters": {
                            "secretName": {
                              "type": "string",
                              "metadata": {
                                "description": "Enter the secret name."
                              }
                            },
                            "contentType": {
                              "type": "string",
                              "defaultValue": "text/plain",
                              "metadata": {
                                "description": "Type of the secret"
                              }
                            },
                            "contentValue": {
                              "type": "secureString",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Value of the secret"
                              }
                            },
                            "keyVaultName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the vault"
                              }
                            },
                            "useExisting": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "When true, a pre-existing secret will be returned"
                              }
                            }
                          },
                          "resources": [
                            {
                              "condition": "[not(parameters('useExisting'))]",
                              "type": "Microsoft.KeyVault/vaults/secrets",
                              "apiVersion": "2021-06-01-preview",
                              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
                              "properties": {
                                "contentType": "[parameters('contentType')]",
                                "value": "[parameters('contentValue')]"
                              }
                            }
                          ],
                          "outputs": {
                            "secretUriWithVersion": {
                              "type": "string",
                              "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2021-06-01-preview').secretUriWithVersion, reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2021-06-01-preview').secretUriWithVersion)]",
                              "metadata": {
                                "description": "The key vault URI linking to the new/udpated secret"
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[if(parameters('useExisting'), resourceId('Microsoft.Storage/storageAccounts', parameters('name')), resourceId('Microsoft.Storage/storageAccounts', parameters('name')))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[if(parameters('useExisting'), parameters('name'), parameters('name'))]"
                    },
                    "storageAccountResource": {
                      "type": "object",
                      "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2021-06-01', 'full'), reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2021-06-01', 'full'))]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[if(parameters('useExisting'), resourceId('Microsoft.KeyVault/vaults', parameters('name')), resourceId('Microsoft.KeyVault/vaults', parameters('name')))]",
              "metadata": {
                "description": "The resource ID of the key vault"
              }
            },
            "name": {
              "type": "string",
              "value": "[if(parameters('useExisting'), parameters('name'), parameters('name'))]",
              "metadata": {
                "description": "The name of the key vault"
              }
            },
            "keyVaultResource": {
              "type": "object",
              "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2021-06-01-preview', 'full'), reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2021-06-01-preview', 'full'))]",
              "metadata": {
                "description": "An object representing the key vault resource"
              }
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "id": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('keyVault-{0}', parameters('name')))).outputs.id.value]",
      "metadata": {
        "description": "The objectId of the key vault"
      }
    },
    "name": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('keyVault-{0}', parameters('name')))).outputs.name.value]",
      "metadata": {
        "description": "The name of the key vault"
      }
    },
    "keyVaultResource": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('keyVault-{0}', parameters('name')))).outputs.keyVaultResource.value]",
      "metadata": {
        "description": "An object representing the key vault resource"
      }
    }
  }
}