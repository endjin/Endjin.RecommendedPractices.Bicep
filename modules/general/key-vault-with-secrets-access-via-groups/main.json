{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.92.45157",
      "templateHash": "4882627741649409317"
    },
    "name": "Key Vault with group-based access policy",
    "description": "Deploys a Key Vault with a secrets access policy managed via group membership",
    "owner": "endjin"
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the key vault"
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "standard",
      "allowedValues": [
        "standard",
        "premium"
      ],
      "metadata": {
        "description": "SKU for the key vault"
      }
    },
    "secretsReadersGroupObjectId": {
      "type": "string",
      "metadata": {
        "description": "The AzureAD objectId for the group to be granted \"get\" access to secrets"
      }
    },
    "secretsReadersPermissions": {
      "type": "array",
      "defaultValue": [
        "get"
      ],
      "metadata": {
        "description": "The list of secret permissions granted to the \"reader\" group"
      }
    },
    "secretsContributorsGroupObjectId": {
      "type": "string",
      "metadata": {
        "description": "The AzureAD objectId for the group to be granted \"get\" & \"set\" access to secrets"
      }
    },
    "secretsContributorsPermissions": {
      "type": "array",
      "defaultValue": [
        "get",
        "set"
      ],
      "metadata": {
        "description": "The list of secret permissions granted to the \"contributors\" group"
      }
    },
    "tenantId": {
      "type": "string",
      "metadata": {
        "description": "The Azure tenantId of the key vault"
      }
    },
    "networkAcls": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "The optional network rules securing access to the key vault (ref: https://learn.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults#networkruleset)"
      }
    },
    "enabledForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When true, the key vault will be accessible by deployments"
      }
    },
    "enabledForDiskEncryption": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When true, the key vault will be accessible for disk encryption"
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When true, the key vault will be accessible by ARM deployments"
      }
    },
    "enableSoftDelete": {
      "type": "bool",
      "metadata": {
        "description": "When true, 'soft delete' functionality is enabled for this key vault. Once set to true, it cannot be reverted to false."
      }
    },
    "softDeleteRetentionInDays": {
      "type": "int",
      "defaultValue": 7,
      "metadata": {
        "description": "Sets the retention policy if this key vault is soft deleted"
      }
    },
    "enableDiagnostics": {
      "type": "bool",
      "metadata": {
        "description": "When true, diagnostics settings will be enabled for the key vault"
      }
    },
    "enablePublicAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "When false, the vault will not accept traffic from public internet. (i.e. all traffic except private endpoint traffic and that that originates from trusted services will be blocked, regardless of any firewall rules)"
      }
    },
    "enablePurgeProtection": {
      "type": "bool",
      "metadata": {
        "description": "When true, the key vault will have purge protection enabled"
      }
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The storage account name to be used for key vault diagnostic settings"
      }
    },
    "useExistingStorageAccount": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When true, an existing storage account be used for diagnotics settings; When false, the storage account is created/updated"
      }
    },
    "diagnosticsRetentionDays": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Sets the retention policy for diagnostics settings data, in days"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the key vault"
      }
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "The resource tags applied to resources"
      }
    }
  },
  "variables": {
    "readerAccessPolicy": "[if(not(empty(parameters('secretsReadersGroupObjectId'))), createObject('objectId', parameters('secretsReadersGroupObjectId'), 'tenantId', parameters('tenantId'), 'permissions', createObject('secrets', parameters('secretsReadersPermissions'))), createObject())]",
    "contributorAccessPolicy": "[if(not(empty(parameters('secretsContributorsGroupObjectId'))), createObject('objectId', parameters('secretsContributorsGroupObjectId'), 'tenantId', parameters('tenantId'), 'permissions', createObject('secrets', parameters('secretsContributorsPermissions'))), createObject())]",
    "accessPolicies": [
      "[variables('readerAccessPolicy')]",
      "[variables('contributorAccessPolicy')]"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('keyVault-{0}', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "sku": {
            "value": "[parameters('sku')]"
          },
          "enableDiagnostics": {
            "value": "[parameters('enableDiagnostics')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "useExistingStorageAccount": {
            "value": "[parameters('useExistingStorageAccount')]"
          },
          "diagnosticsRetentionDays": {
            "value": "[parameters('diagnosticsRetentionDays')]"
          },
          "accessPolicies": {
            "value": "[variables('accessPolicies')]"
          },
          "enableRbacAuthorization": {
            "value": false
          },
          "enableSoftDelete": {
            "value": "[parameters('enableSoftDelete')]"
          },
          "softDeleteRetentionInDays": {
            "value": "[parameters('softDeleteRetentionInDays')]"
          },
          "networkAcls": {
            "value": "[parameters('networkAcls')]"
          },
          "enabledForDeployment": {
            "value": "[parameters('enabledForDeployment')]"
          },
          "enabledForDiskEncryption": {
            "value": "[parameters('enabledForDiskEncryption')]"
          },
          "enabledForTemplateDeployment": {
            "value": "[parameters('enabledForTemplateDeployment')]"
          },
          "enablePublicAccess": {
            "value": "[parameters('enablePublicAccess')]"
          },
          "enablePurgeProtection": {
            "value": "[parameters('enablePurgeProtection')]"
          },
          "tenantId": {
            "value": "[parameters('tenantId')]"
          },
          "useExisting": {
            "value": false
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceTags": {
            "value": "[parameters('resourceTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "16424683962558105987"
            },
            "name": "Key Vault with optional diagnostics settings",
            "description": "Deploys a key vault with optional diagnostics written to blob storage.",
            "owner": "endjin"
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the key vault"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard",
                "premium"
              ],
              "metadata": {
                "description": "SKU for the key vault"
              }
            },
            "accessPolicies": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "The access policies for the key vault"
              }
            },
            "tenantId": {
              "type": "string",
              "metadata": {
                "description": "The Azure tenantId of the key vault"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location of the key vault"
              }
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "The optional network rules securing access to the key vault (ref: https://learn.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults#networkruleset)"
              }
            },
            "enableRbacAuthorization": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the key vault uses Azure RBAC-based access controls and any specified access policy will be ignored"
              }
            },
            "enabledForDeployment": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the key vault will be accessible by deployments"
              }
            },
            "enabledForDiskEncryption": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the key vault will be accessible for disk encryption"
              }
            },
            "enabledForTemplateDeployment": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the key vault will be accessible by ARM deployments"
              }
            },
            "enableSoftDelete": {
              "type": "bool",
              "metadata": {
                "description": "When true, 'soft delete' functionality is enabled for this key vault. Once set to true, it cannot be reverted to false."
              }
            },
            "softDeleteRetentionInDays": {
              "type": "int",
              "defaultValue": 7,
              "metadata": {
                "description": "Sets the retention policy if this key vault is soft deleted"
              }
            },
            "enableDiagnostics": {
              "type": "bool",
              "metadata": {
                "description": "When true, diagnostics settings will be enabled for the key vault"
              }
            },
            "enablePublicAccess": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "When false, the vault will not accept traffic from public internet. (i.e. all traffic except private endpoint traffic and that that originates from trusted services will be blocked, regardless of any firewall rules)"
              }
            },
            "enablePurgeProtection": {
              "type": "bool",
              "metadata": {
                "description": "When true, the key vault will have purge protection enabled"
              }
            },
            "diagnosticsStorageAccountName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The storage account name to be used for key vault diagnostic settings"
              }
            },
            "useExistingStorageAccount": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, an existing storage account be used for diagnotics settings; When false, the storage account is created/updated"
              }
            },
            "diagnosticsRetentionDays": {
              "type": "int",
              "defaultValue": 30,
              "metadata": {
                "description": "Sets the retention policy for diagnostics settings data, in days"
              }
            },
            "useExisting": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the details of an existing key vault will be returned; When false, the key vault is created/updated"
              }
            },
            "resourceTags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "The resource tags applied to resources"
              }
            }
          },
          "resources": [
            {
              "condition": "[not(parameters('useExisting'))]",
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-06-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "[parameters('sku')]"
                },
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "publicNetworkAccess": "[if(parameters('enablePublicAccess'), 'Enabled', 'Disabled')]",
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": "[if(parameters('enableRbacAuthorization'), createArray(), parameters('accessPolicies'))]",
                "enableRbacAuthorization": "[parameters('enableRbacAuthorization')]",
                "enableSoftDelete": "[parameters('enableSoftDelete')]",
                "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]",
                "enablePurgeProtection": "[if(parameters('enablePurgeProtection'), true(), null())]",
                "networkAcls": "[parameters('networkAcls')]"
              },
              "tags": "[parameters('resourceTags')]"
            },
            {
              "condition": "[parameters('enableDiagnostics')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('kvDiagnosticsDeploy-{0}', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('name')]"
                  },
                  "diagnosticsRetentionDays": {
                    "value": "[parameters('diagnosticsRetentionDays')]"
                  },
                  "diagnosticsStorageAccountName": {
                    "value": "[parameters('diagnosticsStorageAccountName')]"
                  },
                  "useExistingStorageAccount": {
                    "value": "[parameters('useExistingStorageAccount')]"
                  },
                  "enablePublicAccess": {
                    "value": "[parameters('enablePublicAccess')]"
                  },
                  "networkAcls": {
                    "value": "[parameters('networkAcls')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "579822164513191519"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "diagnosticsStorageAccountName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The storage account name to be used for key vault diagnostic settings"
                      }
                    },
                    "useExistingStorageAccount": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "When true, an existing storage account be used for diagnotics settings; When false, the storage account is created/updated"
                      }
                    },
                    "diagnosticsRetentionDays": {
                      "type": "int",
                      "defaultValue": 30,
                      "metadata": {
                        "description": "Sets the retention policy for diagnostics settings data, in days"
                      }
                    },
                    "enablePublicAccess": {
                      "type": "bool",
                      "metadata": {
                        "description": "When false, the storage account will not accept traffic from public internet. (i.e. all traffic except private endpoint traffic and that that originates from trusted services will be blocked, regardless of any firewall rules)"
                      }
                    },
                    "networkAcls": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "The optional network rules securing access to the key vault (ref: https://learn.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults#networkruleset)"
                      }
                    }
                  },
                  "variables": {
                    "_diagnosticsStorageAccountName": "[if(empty(parameters('diagnosticsStorageAccountName')), parameters('keyVaultName'), parameters('diagnosticsStorageAccountName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
                      "name": "service",
                      "properties": {
                        "storageAccountId": "[if(parameters('useExistingStorageAccount'), resourceId('Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName')), reference(resourceId('Microsoft.Resources/deployments', 'kvDiagnosticsDeploy'), '2022-09-01').outputs.id.value)]",
                        "logs": [
                          {
                            "category": "AuditEvent",
                            "enabled": true,
                            "retentionPolicy": {
                              "days": "[parameters('diagnosticsRetentionDays')]",
                              "enabled": true
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'kvDiagnosticsDeploy')]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('useExistingStorageAccount'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "kvDiagnosticsDeploy",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[variables('_diagnosticsStorageAccountName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "enablePublicAccess": {
                            "value": "[parameters('enablePublicAccess')]"
                          },
                          "networkAcls": {
                            "value": "[parameters('networkAcls')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.31.92.45157",
                              "templateHash": "12705645307130677572"
                            },
                            "name": "Storage Account",
                            "description": "Deploys a storage account or returns a reference to an existing one.",
                            "owner": "endjin"
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the storage account"
                              }
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "The location of the storage account"
                              }
                            },
                            "sku": {
                              "type": "string",
                              "defaultValue": "Standard_LRS",
                              "metadata": {
                                "description": "The SKU of the storage account"
                              }
                            },
                            "kind": {
                              "type": "string",
                              "defaultValue": "StorageV2",
                              "metadata": {
                                "description": "The kind of the storage account"
                              }
                            },
                            "tlsVersion": {
                              "type": "string",
                              "defaultValue": "TLS1_2",
                              "metadata": {
                                "description": "The minimum TLS version required by the storage account"
                              }
                            },
                            "allowBlobPublicAccess": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "When true, configuring publicly-accessible blob containers will be allowed"
                              }
                            },
                            "allowSharedKeyAccess": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "When false, access to the storage account is only possible via Azure AD authentication"
                              }
                            },
                            "httpsOnly": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "When true, disables access to the storage account via unencrypted HTTP connections"
                              }
                            },
                            "accessTier": {
                              "type": "string",
                              "defaultValue": "Hot",
                              "metadata": {
                                "description": "The access tier of the storage account"
                              }
                            },
                            "enablePublicAccess": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "When false, the storage account will not accept traffic from public internet. (i.e. all traffic except private endpoint traffic and that that originates from trusted services will be blocked, regardless of any firewall rules)"
                              }
                            },
                            "isHnsEnabled": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "When true, enables Hierarchical Namespace feature, i.e. enabling Azure Data Lake Storage Gen2 capabilities"
                              }
                            },
                            "isSftpEnabled": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "When true, enables SFTP feature. `isHnsEnabled` must also be set to true."
                              }
                            },
                            "networkAcls": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "The optional network rules securing access to the storage account (ref: https://learn.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts?pivots=deployment-language-bicep#networkruleset)"
                              }
                            },
                            "saveAccessKeyToKeyVault": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "When true, the primary storage access key will be written to the specified key vault"
                              }
                            },
                            "saveConnectionStringToKeyVault": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "When true, the default connection string using the primary storage access key will be written to the specified key vault"
                              }
                            },
                            "keyVaultName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the key vault used to store the access key"
                              }
                            },
                            "keyVaultResourceGroupName": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().name]",
                              "metadata": {
                                "description": "The resource group containing the key vault used to store the access key"
                              }
                            },
                            "keyVaultSubscriptionId": {
                              "type": "string",
                              "defaultValue": "[subscription().subscriptionId]",
                              "metadata": {
                                "description": "The ID of the subscription containing the key vault used to store the access key"
                              }
                            },
                            "keyVaultAccessKeySecretName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The key vault secret name used to store the access key"
                              }
                            },
                            "keyVaultConnectionStringSecretName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The key vault secret name used to store the connection string"
                              }
                            },
                            "useExisting": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "When true, the details of an existing storage account will be returned; When false, the storage account is created/updated"
                              }
                            },
                            "resource_tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "The resource tags applied to resources"
                              }
                            }
                          },
                          "resources": [
                            {
                              "condition": "[not(parameters('useExisting'))]",
                              "type": "Microsoft.Storage/storageAccounts",
                              "apiVersion": "2022-05-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "sku": {
                                "name": "[parameters('sku')]"
                              },
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "minimumTlsVersion": "[parameters('tlsVersion')]",
                                "supportsHttpsTrafficOnly": "[parameters('httpsOnly')]",
                                "accessTier": "[parameters('accessTier')]",
                                "isHnsEnabled": "[parameters('isHnsEnabled')]",
                                "networkAcls": "[parameters('networkAcls')]",
                                "isSftpEnabled": "[parameters('isSftpEnabled')]",
                                "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                                "publicNetworkAccess": "[if(parameters('enablePublicAccess'), 'Enabled', 'Disabled')]",
                                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]"
                              },
                              "tags": "[parameters('resource_tags')]"
                            },
                            {
                              "condition": "[parameters('saveAccessKeyToKeyVault')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('storageAccessKeySecretDeploy{0}', parameters('name'))]",
                              "subscriptionId": "[parameters('keyVaultSubscriptionId')]",
                              "resourceGroup": "[parameters('keyVaultResourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "keyVaultName": {
                                    "value": "[parameters('keyVaultName')]"
                                  },
                                  "secretName": {
                                    "value": "[parameters('keyVaultAccessKeySecretName')]"
                                  },
                                  "contentValue": "[if(parameters('useExisting'), createObject('value', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-05-01').keys[0].value), createObject('value', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-05-01').keys[0].value))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.31.92.45157",
                                      "templateHash": "7647943469143824631"
                                    },
                                    "name": "Adds or updates a Key Vault secret",
                                    "description": "Adds or updates a Key Vault secret",
                                    "owner": "endjin"
                                  },
                                  "parameters": {
                                    "secretName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Enter the secret name."
                                      }
                                    },
                                    "contentType": {
                                      "type": "string",
                                      "defaultValue": "text/plain",
                                      "metadata": {
                                        "description": "Type of the secret"
                                      }
                                    },
                                    "contentValue": {
                                      "type": "securestring",
                                      "defaultValue": "",
                                      "metadata": {
                                        "description": "Value of the secret"
                                      }
                                    },
                                    "keyVaultName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the vault"
                                      }
                                    },
                                    "useExisting": {
                                      "type": "bool",
                                      "defaultValue": false,
                                      "metadata": {
                                        "description": "When true, a pre-existing secret will be returned"
                                      }
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[not(parameters('useExisting'))]",
                                      "type": "Microsoft.KeyVault/vaults/secrets",
                                      "apiVersion": "2021-06-01-preview",
                                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
                                      "properties": {
                                        "contentType": "[parameters('contentType')]",
                                        "value": "[parameters('contentValue')]"
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "secretUriWithVersion": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "The key vault URI linking to the new/updated secret"
                                      },
                                      "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2021-06-01-preview').secretUriWithVersion, reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2021-06-01-preview').secretUriWithVersion)]"
                                    }
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                              ]
                            },
                            {
                              "condition": "[parameters('saveConnectionStringToKeyVault')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('storageConnectionStringSecretDeploy{0}', parameters('name'))]",
                              "subscriptionId": "[parameters('keyVaultSubscriptionId')]",
                              "resourceGroup": "[parameters('keyVaultResourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "keyVaultName": {
                                    "value": "[parameters('keyVaultName')]"
                                  },
                                  "secretName": {
                                    "value": "[parameters('keyVaultConnectionStringSecretName')]"
                                  },
                                  "contentValue": {
                                    "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('name'), environment().suffixes.storage, if(parameters('useExisting'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-05-01').keys[0].value, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-05-01').keys[0].value))]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.31.92.45157",
                                      "templateHash": "7647943469143824631"
                                    },
                                    "name": "Adds or updates a Key Vault secret",
                                    "description": "Adds or updates a Key Vault secret",
                                    "owner": "endjin"
                                  },
                                  "parameters": {
                                    "secretName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Enter the secret name."
                                      }
                                    },
                                    "contentType": {
                                      "type": "string",
                                      "defaultValue": "text/plain",
                                      "metadata": {
                                        "description": "Type of the secret"
                                      }
                                    },
                                    "contentValue": {
                                      "type": "securestring",
                                      "defaultValue": "",
                                      "metadata": {
                                        "description": "Value of the secret"
                                      }
                                    },
                                    "keyVaultName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the vault"
                                      }
                                    },
                                    "useExisting": {
                                      "type": "bool",
                                      "defaultValue": false,
                                      "metadata": {
                                        "description": "When true, a pre-existing secret will be returned"
                                      }
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[not(parameters('useExisting'))]",
                                      "type": "Microsoft.KeyVault/vaults/secrets",
                                      "apiVersion": "2021-06-01-preview",
                                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
                                      "properties": {
                                        "contentType": "[parameters('contentType')]",
                                        "value": "[parameters('contentValue')]"
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "secretUriWithVersion": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "The key vault URI linking to the new/updated secret"
                                      },
                                      "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2021-06-01-preview').secretUriWithVersion, reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('secretName')), '2021-06-01-preview').secretUriWithVersion)]"
                                    }
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "metadata": {
                                "description": "The resource ID of the storage account"
                              },
                              "value": "[if(parameters('useExisting'), resourceId('Microsoft.Storage/storageAccounts', parameters('name')), resourceId('Microsoft.Storage/storageAccounts', parameters('name')))]"
                            },
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the storage account"
                              },
                              "value": "[if(parameters('useExisting'), parameters('name'), parameters('name'))]"
                            },
                            "storageAccountResource": {
                              "type": "object",
                              "metadata": {
                                "description": "An object representing the storage account resource"
                              },
                              "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-05-01', 'full'), reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-05-01', 'full'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the key vault"
              },
              "value": "[if(parameters('useExisting'), resourceId('Microsoft.KeyVault/vaults', parameters('name')), resourceId('Microsoft.KeyVault/vaults', parameters('name')))]"
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the key vault"
              },
              "value": "[if(parameters('useExisting'), parameters('name'), parameters('name'))]"
            },
            "keyVaultResource": {
              "type": "object",
              "metadata": {
                "description": "An object representing the key vault resource"
              },
              "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2021-06-01-preview', 'full'), reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2021-06-01-preview', 'full'))]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "id": {
      "type": "string",
      "metadata": {
        "description": "The objectId of the key vault"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('keyVault-{0}', parameters('name'))), '2022-09-01').outputs.id.value]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the key vault"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('keyVault-{0}', parameters('name'))), '2022-09-01').outputs.name.value]"
    },
    "keyVaultResource": {
      "type": "object",
      "metadata": {
        "description": "An object representing the key vault resource"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('keyVault-{0}', parameters('name'))), '2022-09-01').outputs.keyVaultResource.value]"
    }
  }
}