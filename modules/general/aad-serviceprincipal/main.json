{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "18171841703258973186"
    }
  },
  "parameters": {
    "displayName": {
      "type": "string",
      "metadata": {
        "description": "The display name of the AzureAD service principal"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "The key vault where the service principal credential details will be stored"
      }
    },
    "keyVaultSecretName": {
      "type": "string",
      "metadata": {
        "description": "Name of the key vault secret that will hold where the service principal credential details"
      }
    },
    "managedIdentityResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource identifier of the managed identity used for the deployment script."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location in which the deployment script will be ran"
      }
    },
    "passwordLifetimeDays": {
      "type": "int",
      "metadata": {
        "description": "Sets the expiration of any newly-created credentials"
      }
    },
    "useApplicationCredential": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When true, the credentials will be added to the AzureAD application instead of the service principal"
      }
    },
    "rotateSecret": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When true, the existing credentials will be rotated"
      }
    },
    "credentialDisplayName": {
      "type": "string",
      "defaultValue": "Created by the 'aad-serviceprincipal' ARM deployment script",
      "metadata": {
        "description": "The display name metadata for the credential"
      }
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "The resource tags applied to resources"
      }
    }
  },
  "variables": {
    "name": "[format('AadServicePrincipalScript-{0}', parameters('displayName'))]",
    "scriptPath": "deploy-aad-service-principal.ps1",
    "scriptContent": "[CmdletBinding()]\r\n[Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSAvoidUsingPlainTextForPassword', 'CredentialDisplayName', Justification='Only holds non-sensitive metadata')]\r\nparam (\r\n    [Parameter(Mandatory=$true)]\r\n    [string] $DisplayName,\r\n\r\n    [Parameter(Mandatory = $true)]\r\n    [string] $KeyVaultName,\r\n\r\n    [Parameter(Mandatory = $true)]\r\n    [string] $KeyVaultSecretName,\r\n\r\n    [int] $PasswordLifetimeDays = 90,\r\n\r\n    [string] $CredentialDisplayName = \"Created by the 'aad-serviceprincipal' ARM deployment script\",\r\n\r\n    [switch] $UseApplicationCredential,\r\n\r\n    [switch] $RotateSecret,\r\n\r\n    $CorvusModulePath = $null\r\n)\r\n \r\n$ErrorActionPreference = 'Stop'\r\nSet-StrictMode -Version 4.0\r\n\r\n$azCtx = Get-AzContext\r\n$azCtx | Format-List | Out-String | Write-Host\r\n\r\nif ($CorvusModulePath) {\r\n    # Supports local testing with development versions of Corvus.Deployment\r\n    Write-Verbose \"Loading Corvus.Deployment from $CorvusModulePath\"\r\n    Import-Module $CorvusModulePath -Force -Verbose:$false\r\n}\r\nelse {\r\n    # Install the Corvus.Deployment module from PSGallery\r\n    Install-Module Corvus.Deployment -Scope CurrentUser -Repository PSGallery -Force -Verbose\r\n    Import-Module Corvus.Deployment -Verbose:$false\r\n}\r\nGet-Module Corvus.Deployment | Format-Table | Out-String | Write-Host\r\nConnect-CorvusAzure -AadTenantId $azCtx.Tenant.Id -SkipAzureCli -TenantOnly\r\n\r\n$sp,$secret = Assert-CorvusAzureServicePrincipalForRbac -Name $DisplayName `\r\n                                                        -UseApplicationCredential:$UseApplicationCredential `\r\n                                                        -CredentialDisplayName $CredentialDisplayName `\r\n                                                        -PasswordLifetimeDays $PasswordLifetimeDays `\r\n                                                        -KeyVaultName $KeyVaultName `\r\n                                                        -KeyVaultSecretName $KeyVaultSecretName `\r\n                                                        -RotateSecret:$RotateSecret `\r\n                                                        -Verbose:$VerbosePreference\r\n\r\nWrite-Verbose \"Service Principal Details:`n$($sp | ConvertTo-Json)\"\r\n\r\n\r\n# Setup ARM outputs\r\n$DeploymentScriptOutputs = @{\r\n    appId = $sp.appId       # assuming Azure Graph version of Azure PowerShell\r\n    objectId = $sp.id\r\n}\r\nWrite-Verbose \"Script Outputs:`n$($DeploymentScriptOutputs | ConvertTo-Json)\"",
    "scriptArguments": [
      "[format('-DisplayName \\\"{0}\\\"', parameters('displayName'))]",
      "[format('-KeyVaultName \\\"{0}\\\"', parameters('keyVaultName'))]",
      "[format('-KeyVaultSecretName \\\"{0}\\\"', parameters('keyVaultSecretName'))]",
      "[format('-CredentialDisplayName \\\"{0}\\\"', parameters('credentialDisplayName'))]",
      "[format('-UseApplicationCredential ${0}', parameters('useApplicationCredential'))]",
      "[format('-PasswordLifetimeDays {0}', parameters('passwordLifetimeDays'))]",
      "[format('-RotateSecret ${0}', parameters('rotateSecret'))]"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "[variables('name')]",
      "location": "[parameters('location')]",
      "kind": "AzurePowerShell",
      "properties": {
        "azPowerShellVersion": "8.3",
        "retentionInterval": "P1D",
        "cleanupPreference": "Always",
        "scriptContent": "[variables('scriptContent')]",
        "arguments": "[join(variables('scriptArguments'), ' ')]"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', parameters('managedIdentityResourceId'))]": {}
        }
      },
      "tags": "[parameters('resourceTags')]"
    }
  ],
  "outputs": {
    "app_id": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('name')), '2020-10-01').outputs.appId]",
      "metadata": {
        "description": "The application/client ID of the AzureAD service principal"
      }
    },
    "object_id": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('name')), '2020-10-01').outputs.objectId]",
      "metadata": {
        "description": "The object/principal ID of the AzureAD service principal"
      }
    }
  }
}