{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "59537849652479737"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "$fxv#0": "requests\r\n| where success == false\r\n| summarize failedCount=sum(itemCount), impactedUsers=dcount(user_Id) by operation_Name\r\n| order by failedCount desc\r\n"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}AgDeploy', parameters('prefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('prefix')]"
          },
          "notifyEmailAddresses": {
            "value": [
              "noone@nowhere.org"
            ]
          },
          "shortName": {
            "value": "[parameters('prefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "4215599251728897843"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the action group"
              }
            },
            "shortName": {
              "type": "string",
              "metadata": {
                "description": "The short name of the action group"
              }
            },
            "enabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "When true, the action group is enabled and will send notifications"
              }
            },
            "notifyEmailAddresses": {
              "type": "array",
              "metadata": {
                "description": "The email addresses to notify"
              }
            }
          },
          "variables": {
            "copy": [
              {
                "name": "emailReceivers",
                "count": "[length(parameters('notifyEmailAddresses'))]",
                "input": {
                  "name": "[format('{0}-email', parameters('shortName'))]",
                  "emailAddress": "[parameters('notifyEmailAddresses')[copyIndex('emailReceivers')]]",
                  "useCommonAlertSchema": false
                }
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2022-06-01",
              "name": "[parameters('name')]",
              "location": "global",
              "properties": {
                "enabled": "[parameters('enabled')]",
                "groupShortName": "[parameters('shortName')]",
                "emailReceivers": "[variables('emailReceivers')]",
                "smsReceivers": [],
                "webhookReceivers": [],
                "eventHubReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the action group"
              }
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the action group"
              }
            },
            "resource": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Insights/actionGroups', parameters('name')), '2022-06-01', 'full')]",
              "metadata": {
                "description": "An object representing the action group resource"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('prefix')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "dailyQuotaGb": {
            "value": 1
          },
          "enableLogAccessUsingOnlyResourcePermissions": {
            "value": false
          },
          "name": {
            "value": "[parameters('prefix')]"
          },
          "publicNetworkAccessForIngestion": {
            "value": "Disabled"
          },
          "publicNetworkAccessForQuery": {
            "value": "Disabled"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "9781072933712379631"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the log analytics workspace"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location of the log analytics workspace"
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Standard",
              "metadata": {
                "description": "The SKU of the log analytics workspace"
              }
            },
            "dailyQuotaGb": {
              "type": "int",
              "metadata": {
                "description": "The daily ingestion quota (in GB) of the log analytics workspace - use \"-1\" for no limit"
              }
            },
            "enableLogAccessUsingOnlyResourcePermissions": {
              "type": "bool",
              "metadata": {
                "description": "When true, the log analytics workspace will only be accessible by using resource permissions"
              }
            },
            "publicNetworkAccessForIngestion": {
              "type": "string",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ],
              "metadata": {
                "description": "Indicates whether the public network access for ingestion is enabled or disabled"
              }
            },
            "publicNetworkAccessForQuery": {
              "type": "string",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ],
              "metadata": {
                "description": "Indicates whether the public network access for query is enabled or disabled"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "The tag values of the log analytics workspace"
              }
            },
            "useExisting": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the details of an existing log analytics workspace will be returned; When false, the log analytics workspace is created/updated"
              }
            }
          },
          "resources": [
            {
              "condition": "[not(parameters('useExisting'))]",
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-10-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('skuName')]"
                },
                "features": {
                  "enableLogAccessUsingOnlyResourcePermissions": "[parameters('enableLogAccessUsingOnlyResourcePermissions')]"
                },
                "workspaceCapping": {
                  "dailyQuotaGb": "[parameters('dailyQuotaGb')]"
                },
                "publicNetworkAccessForIngestion": "[parameters('publicNetworkAccessForIngestion')]",
                "publicNetworkAccessForQuery": "[parameters('publicNetworkAccessForQuery')]"
              },
              "tags": "[parameters('tagValues')]"
            }
          ],
          "outputs": {
            "workspaceResource": {
              "type": "object",
              "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('name')), '2020-10-01', 'full'), reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('name')), '2020-10-01', 'full'))]",
              "metadata": {
                "description": "An object representing the log analytics workspace"
              }
            },
            "name": {
              "type": "string",
              "value": "[if(parameters('useExisting'), parameters('name'), parameters('name'))]",
              "metadata": {
                "description": "The workspace resource name"
              }
            },
            "id": {
              "type": "string",
              "value": "[if(parameters('useExisting'), resourceId('Microsoft.OperationalInsights/workspaces', parameters('name')), resourceId('Microsoft.OperationalInsights/workspaces', parameters('name')))]",
              "metadata": {
                "description": "The workspace resource ID"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('prefix')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "actionGroupId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}AgDeploy', parameters('prefix'))), '2020-10-01').outputs.id.value]"
          },
          "alertDescription": {
            "value": "Test log alert description"
          },
          "displayName": {
            "value": "Test Log Alert"
          },
          "evaluationFrequencyMinutes": {
            "value": 5
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "name": {
            "value": "[parameters('prefix')]"
          },
          "query": {
            "value": "[variables('$fxv#0')]"
          },
          "queryThreshold": {
            "value": 0
          },
          "queryThresholdOperator": {
            "value": "GreaterThan"
          },
          "queryTimeAggregation": {
            "value": "Count"
          },
          "severity": {
            "value": "Critical"
          },
          "targetScopes": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', parameters('prefix')), '2020-10-01').outputs.id.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "16351627810577274303"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The Alert resource name."
              }
            },
            "displayName": {
              "type": "string",
              "metadata": {
                "description": "The display name of the Alert rule."
              }
            },
            "alertDescription": {
              "type": "string",
              "metadata": {
                "description": "The description of the alert"
              }
            },
            "actionGroupId": {
              "type": "string",
              "metadata": {
                "description": "Action Group resource Id to invoke when the Alert fires."
              }
            },
            "enabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "The flag which indicates whether this Alert query is enabled"
              }
            },
            "evaluationFrequencyMinutes": {
              "type": "int",
              "metadata": {
                "description": "How often the Alert query is evaluated, in minutes."
              }
            },
            "evaluationWindowSizeMinutes": {
              "type": "int",
              "defaultValue": "[parameters('evaluationFrequencyMinutes')]",
              "metadata": {
                "description": "The period of time on which the Alert query will be executed, in minutes."
              }
            },
            "targetScopes": {
              "type": "array",
              "metadata": {
                "description": "The list of resource id's that this Alert query is scoped to."
              }
            },
            "targetResourceTypes": {
              "type": "array",
              "defaultValue": [
                "microsoft.insights/components"
              ],
              "metadata": {
                "description": "List of resource type of the target resource(s) on which the alert is created/updated. For example if the scope is a resource group and targetResourceTypes is Microsoft.Compute/virtualMachines, then a different alert will be fired for each virtual machine in the resource group which meet the alert criteria."
              }
            },
            "severity": {
              "type": "string",
              "allowedValues": [
                "Critical",
                "Error",
                "Warning",
                "Informational",
                "Verbose"
              ],
              "metadata": {
                "description": "The severity of the alert."
              }
            },
            "query": {
              "type": "string",
              "metadata": {
                "description": "Log query alert"
              }
            },
            "queryThreshold": {
              "type": "int",
              "metadata": {
                "description": "The criteria threshold value that activates the alert."
              }
            },
            "queryTimeAggregation": {
              "type": "string",
              "metadata": {
                "description": "Aggregation type."
              },
              "allowedValues": [
                "Average",
                "Count",
                "Maximum",
                "Minimum",
                "Total"
              ]
            },
            "queryThresholdOperator": {
              "type": "string",
              "metadata": {
                "description": "The criteria operator."
              },
              "allowedValues": [
                "GreatorOrLessThan",
                "GreaterThan",
                "LessThan"
              ]
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location of the deployed resources"
              }
            },
            "numberOfEvaluationPeriods": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points."
              }
            },
            "minFailingPeriodsToAlert": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods."
              }
            },
            "autoMitigate": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "The flag that indicates whether the alert should be auto resolved or not. The default is true."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-08-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "displayName": "[parameters('displayName')]",
                "description": "[parameters('alertDescription')]",
                "severity": "[reference(resourceId('Microsoft.Resources/deployments', format('alertUtils_{0}', parameters('severity'))), '2020-10-01').outputs.severity.value]",
                "enabled": "[parameters('enabled')]",
                "evaluationFrequency": "[reference(resourceId('Microsoft.Resources/deployments', format('alertUtils_{0}', parameters('severity'))), '2020-10-01').outputs.evaluationFrequency.value]",
                "scopes": "[parameters('targetScopes')]",
                "targetResourceTypes": "[parameters('targetResourceTypes')]",
                "windowSize": "[reference(resourceId('Microsoft.Resources/deployments', format('alertUtils_{0}', parameters('severity'))), '2020-10-01').outputs.evaluationWindowSize.value]",
                "criteria": {
                  "allOf": [
                    {
                      "query": "[parameters('query')]",
                      "timeAggregation": "[parameters('queryTimeAggregation')]",
                      "dimensions": [],
                      "operator": "[parameters('queryThresholdOperator')]",
                      "threshold": "[parameters('queryThreshold')]",
                      "failingPeriods": {
                        "numberOfEvaluationPeriods": "[parameters('numberOfEvaluationPeriods')]",
                        "minFailingPeriodsToAlert": "[parameters('minFailingPeriodsToAlert')]"
                      }
                    }
                  ]
                },
                "actions": {
                  "actionGroups": [
                    "[parameters('actionGroupId')]"
                  ],
                  "customProperties": {}
                },
                "autoMitigate": "[parameters('autoMitigate')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('alertUtils_{0}', parameters('severity')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('alertUtils_{0}', parameters('severity'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "severity": {
                    "value": "[parameters('severity')]"
                  },
                  "evaluationFrequencyMinutes": {
                    "value": "[parameters('evaluationFrequencyMinutes')]"
                  },
                  "evaluationWindowSizeMinutes": {
                    "value": "[parameters('evaluationWindowSizeMinutes')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "9994439745399304463"
                    }
                  },
                  "parameters": {
                    "severity": {
                      "type": "string",
                      "allowedValues": [
                        "Critical",
                        "Error",
                        "Warning",
                        "Informational",
                        "Verbose"
                      ],
                      "metadata": {
                        "description": "The severity level of the alert"
                      }
                    },
                    "evaluationFrequencyMinutes": {
                      "type": "int",
                      "metadata": {
                        "description": "The frequency at which the alert is evaluated, in minutes"
                      }
                    },
                    "evaluationWindowSizeMinutes": {
                      "type": "int",
                      "defaultValue": "[parameters('evaluationFrequencyMinutes')]",
                      "metadata": {
                        "description": "The window size used to evaluate the alert, in minutes"
                      }
                    }
                  },
                  "variables": {
                    "severityLookup": {
                      "critical": 0,
                      "error": 1,
                      "warning": 2,
                      "informational": 3,
                      "verbose": 4
                    }
                  },
                  "resources": [],
                  "outputs": {
                    "severity": {
                      "type": "int",
                      "value": "[variables('severityLookup')[parameters('severity')]]",
                      "metadata": {
                        "description": "The numeric representation of the specified severity level"
                      }
                    },
                    "evaluationFrequency": {
                      "type": "string",
                      "value": "[format('PT{0}M', parameters('evaluationFrequencyMinutes'))]",
                      "metadata": {
                        "description": "The 'evaluationFrequency' in ISO 8601 duration format"
                      }
                    },
                    "evaluationWindowSize": {
                      "type": "string",
                      "value": "[format('PT{0}M', parameters('evaluationWindowSizeMinutes'))]",
                      "metadata": {
                        "description": "The 'evaluationWindowSize' in ISO 8601 duration format"
                      }
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/scheduledQueryRules', parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the alert"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}AgDeploy', parameters('prefix')))]",
        "[resourceId('Microsoft.Resources/deployments', parameters('prefix'))]"
      ]
    }
  ]
}