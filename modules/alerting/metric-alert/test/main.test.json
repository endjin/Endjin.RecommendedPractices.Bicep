{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "18278940382271958875"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}AgDeploy', parameters('prefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('prefix')]"
          },
          "notifyEmailAddresses": {
            "value": [
              "noone@nowhere.org"
            ]
          },
          "shortName": {
            "value": "[parameters('prefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "4215599251728897843"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the action group"
              }
            },
            "shortName": {
              "type": "string",
              "metadata": {
                "description": "The short name of the action group"
              }
            },
            "enabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "When true, the action group is enabled and will send notifications"
              }
            },
            "notifyEmailAddresses": {
              "type": "array",
              "metadata": {
                "description": "The email addresses to notify"
              }
            }
          },
          "variables": {
            "copy": [
              {
                "name": "emailReceivers",
                "count": "[length(parameters('notifyEmailAddresses'))]",
                "input": {
                  "name": "[format('{0}-email', parameters('shortName'))]",
                  "emailAddress": "[parameters('notifyEmailAddresses')[copyIndex('emailReceivers')]]",
                  "useCommonAlertSchema": false
                }
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2022-06-01",
              "name": "[parameters('name')]",
              "location": "global",
              "properties": {
                "enabled": "[parameters('enabled')]",
                "groupShortName": "[parameters('shortName')]",
                "emailReceivers": "[variables('emailReceivers')]",
                "smsReceivers": [],
                "webhookReceivers": [],
                "eventHubReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the action group"
              }
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the action group"
              }
            },
            "resource": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Insights/actionGroups', parameters('name')), '2022-06-01', 'full')]",
              "metadata": {
                "description": "An object representing the action group resource"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}AiDeploy', parameters('prefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[format('{0}logs', parameters('prefix'))]"
          },
          "name": {
            "value": "[format('{0}ai', parameters('prefix'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "14656863211449605096"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the app insights workspace"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location of the app insights workspace"
              }
            },
            "kind": {
              "type": "string",
              "defaultValue": "web",
              "allowedValues": [
                "web",
                "ios",
                "other",
                "store",
                "java",
                "phone"
              ],
              "metadata": {
                "description": "The kind of application using the workspace"
              }
            },
            "applicationType": {
              "type": "string",
              "defaultValue": "web",
              "allowedValues": [
                "other",
                "web"
              ],
              "metadata": {
                "description": "The type of application using the workspace"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "The name of the existing Log Analytics workspace which the data will be ingested to."
              }
            },
            "disablePublicNetworkAccessForIngestion": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, public network access is disabled for ingestion of data."
              }
            },
            "disablePublicNetworkAccessForQuery": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, public network access is disabled for querying of data."
              }
            },
            "useExisting": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When true, the details of an existing app insights instance will be returned; When false, the app insights instance is created/updated"
              }
            },
            "resourceTags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "The resource tags applied to resources"
              }
            }
          },
          "resources": [
            {
              "condition": "[not(parameters('useExisting'))]",
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "Application_Type": "[parameters('applicationType')]",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaAIExtension",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "[if(parameters('disablePublicNetworkAccessForIngestion'), 'Disabled', 'Enabled')]",
                "publicNetworkAccessForQuery": "[if(parameters('disablePublicNetworkAccessForQuery'), 'Disabled', 'Enabled')]"
              },
              "tags": "[parameters('resourceTags')]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[if(parameters('useExisting'), resourceId('Microsoft.Insights/components', parameters('name')), resourceId('Microsoft.Insights/components', parameters('name')))]",
              "metadata": {
                "description": "The resource ID of the app insights workspace"
              }
            },
            "name": {
              "type": "string",
              "value": "[if(parameters('useExisting'), parameters('name'), parameters('name'))]",
              "metadata": {
                "description": "The name of the app insights workspace"
              }
            },
            "appInsightsWorkspaceResource": {
              "type": "object",
              "value": "[if(parameters('useExisting'), reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02', 'full'), reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02-preview', 'full'))]",
              "metadata": {
                "description": "An object representing the app insights workspace resource"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}AlertDeploy', parameters('prefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('prefix')]"
          },
          "alertDescription": {
            "value": "Test metric alert"
          },
          "actionGroupId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}AgDeploy', parameters('prefix'))), '2020-10-01').outputs.id.value]"
          },
          "allOfCriteria": {
            "value": [
              {
                "threshold": 0,
                "name": "FailedRequestsMetric",
                "metricNamespace": "microsoft.insights/components",
                "metricName": "requests/failed",
                "dimensions": [],
                "operator": "GreaterThan",
                "timeAggregation": "Count",
                "skipMetricValidation": false,
                "criterionType": "StaticThresholdCriterion"
              }
            ]
          },
          "criteriaType": {
            "value": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
          },
          "enabled": {
            "value": true
          },
          "evaluationFrequencyMinutes": {
            "value": 5
          },
          "evaluationWindowSizeMinutes": {
            "value": 5
          },
          "severity": {
            "value": "Critical"
          },
          "targetScopes": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', format('{0}AiDeploy', parameters('prefix'))), '2020-10-01').outputs.id.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "5724846633413350010"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The metric Alert resource name."
              }
            },
            "allOfCriteria": {
              "type": "array",
              "metadata": {
                "description": "Defines the criteria that must be true to fire the Alert."
              }
            },
            "actionGroupId": {
              "type": "string",
              "metadata": {
                "description": "Action Group resource Id to invoke when the Alert fires."
              }
            },
            "criteriaType": {
              "type": "string",
              "defaultValue": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria",
              "allowedValues": [
                "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria",
                "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
              ],
              "metadata": {
                "description": "The type of metric Alert criteria"
              }
            },
            "alertDescription": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The description of the alert"
              }
            },
            "enabled": {
              "type": "bool",
              "metadata": {
                "description": "The flag which indicates whether this Alert query is enabled"
              }
            },
            "evaluationFrequencyMinutes": {
              "type": "int",
              "metadata": {
                "description": "How often the Alert query is evaluated, in minutes."
              }
            },
            "evaluationWindowSizeMinutes": {
              "type": "int",
              "defaultValue": "[parameters('evaluationFrequencyMinutes')]",
              "metadata": {
                "description": "The period of time on which the Alert query will be executed, in minutes."
              }
            },
            "targetScopes": {
              "type": "array",
              "metadata": {
                "description": "The list of resource id's that this Alert is scoped to."
              }
            },
            "autoMitigate": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "The flag that indicates whether the alert should be auto resolved or not. The default is true."
              }
            },
            "severity": {
              "type": "string",
              "allowedValues": [
                "Critical",
                "Error",
                "Warning",
                "Informational",
                "Verbose"
              ],
              "metadata": {
                "description": "The severity of the alert."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "[parameters('name')]",
              "location": "global",
              "properties": {
                "criteria": {
                  "allOf": "[parameters('allOfCriteria')]",
                  "odata.type": "[parameters('criteriaType')]"
                },
                "description": "[parameters('alertDescription')]",
                "enabled": "[parameters('enabled')]",
                "evaluationFrequency": "[reference(resourceId('Microsoft.Resources/deployments', format('alertUtils_{0}', parameters('severity'))), '2020-10-01').outputs.evaluationFrequency.value]",
                "scopes": "[parameters('targetScopes')]",
                "severity": "[reference(resourceId('Microsoft.Resources/deployments', format('alertUtils_{0}', parameters('severity'))), '2020-10-01').outputs.severity.value]",
                "windowSize": "[reference(resourceId('Microsoft.Resources/deployments', format('alertUtils_{0}', parameters('severity'))), '2020-10-01').outputs.evaluationWindowSize.value]",
                "actions": [
                  {
                    "actionGroupId": "[parameters('actionGroupId')]"
                  }
                ],
                "autoMitigate": "[parameters('autoMitigate')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('alertUtils_{0}', parameters('severity')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('alertUtils_{0}', parameters('severity'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "severity": {
                    "value": "[parameters('severity')]"
                  },
                  "evaluationFrequencyMinutes": {
                    "value": "[parameters('evaluationFrequencyMinutes')]"
                  },
                  "evaluationWindowSizeMinutes": {
                    "value": "[parameters('evaluationWindowSizeMinutes')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "9994439745399304463"
                    }
                  },
                  "parameters": {
                    "severity": {
                      "type": "string",
                      "allowedValues": [
                        "Critical",
                        "Error",
                        "Warning",
                        "Informational",
                        "Verbose"
                      ],
                      "metadata": {
                        "description": "The severity level of the alert"
                      }
                    },
                    "evaluationFrequencyMinutes": {
                      "type": "int",
                      "metadata": {
                        "description": "The frequency at which the alert is evaluated, in minutes"
                      }
                    },
                    "evaluationWindowSizeMinutes": {
                      "type": "int",
                      "defaultValue": "[parameters('evaluationFrequencyMinutes')]",
                      "metadata": {
                        "description": "The window size used to evaluate the alert, in minutes"
                      }
                    }
                  },
                  "variables": {
                    "severityLookup": {
                      "critical": 0,
                      "error": 1,
                      "warning": 2,
                      "informational": 3,
                      "verbose": 4
                    }
                  },
                  "resources": [],
                  "outputs": {
                    "severity": {
                      "type": "int",
                      "value": "[variables('severityLookup')[parameters('severity')]]",
                      "metadata": {
                        "description": "The numeric representation of the specified severity level"
                      }
                    },
                    "evaluationFrequency": {
                      "type": "string",
                      "value": "[format('PT{0}M', parameters('evaluationFrequencyMinutes'))]",
                      "metadata": {
                        "description": "The 'evaluationFrequency' in ISO 8601 duration format"
                      }
                    },
                    "evaluationWindowSize": {
                      "type": "string",
                      "value": "[format('PT{0}M', parameters('evaluationWindowSizeMinutes'))]",
                      "metadata": {
                        "description": "The 'evaluationWindowSize' in ISO 8601 duration format"
                      }
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/metricAlerts', parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the alert"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}AgDeploy', parameters('prefix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}AiDeploy', parameters('prefix')))]"
      ]
    }
  ]
}